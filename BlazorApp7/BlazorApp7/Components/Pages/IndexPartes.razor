@page "/Partes"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioPartes _repositorio;
@inject IRepositorioEmpresas _repositorioempresas;

<h3>Partes</h3>
<a class="btn btn-success" href="Partes/nueva">Agregar Parte de Armored Core</a>
@if (_Partes == null)
{
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Cargando...</span>
    </div>
}
else if (_Partes.Count == 0)
{
    <h3>No existen Partes de Armored Cores disponibles</h3>
}
else
{
    @foreach (var grupo in _partesAgrupadasPorEmpresa)
    {
        <h4>@grupo.Key.Nombre</h4>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Posición</th>
                    <th>Tipo de arma</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var parte in grupo)
                {
                    <tr>
                        <td>@parte.Nombre</td>
                        <td>@parte.Posicion</td>
                        <td>@parte.TipoArma</td>
                        <td>
                            <button class="btn btn-sm" title="Modificar" @onclick="()=>Modificar(parte.Id)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                    <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325" />
                                </svg>
                            </button>
                            <button class="btn btn-sm" title="Eliminar" @onclick="()=>Eliminar(parte)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                    <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                                </svg>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {
    private List<Parte>? _Partes;
    private List<Empresa>? _empresas;
    private ILookup<Empresa, Parte>? _partesAgrupadasPorEmpresa;

    protected override async Task OnInitializedAsync()
    {
        _Partes = await _repositorio.GetAll();
        _empresas = await _repositorioempresas.GetAll();
        _partesAgrupadasPorEmpresa = _Partes.ToLookup(parte => parte.Empresa);
    }

    private async void Eliminar(Parte parte)
    {
        await _repositorio.Delete(parte.Id);
        _Partes!.Remove(parte);
        _partesAgrupadasPorEmpresa = _Partes.ToLookup(parte => parte.Empresa);
        StateHasChanged();
    }

    private string ObtenerEmpresa(int id)
    {
        if (_empresas == null)
        {
            return "empresas no cargados";
        }

        var Empresa = _empresas.FirstOrDefault(e => e.Id == id);
        return Empresa != null ? Empresa.Nombre : "Empresa no encontrado";
    }

    private void Modificar(int id)
    {
        _navigator.NavigateTo($"/Partes/editar/{id}");
    }

}